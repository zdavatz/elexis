// Copyright 2011 (c) Niklaus Giger niklaus.giger@member.fsf.org
// License: Eclips Public Licens EPL 1.0
//
// Beanshell script for the izPack installer of Elexis.
// If we are running the installer in a previous Elexis folder, the user gets
// prompted if he/she wants to copy the configurations and/or workspace from
// the current to the new installation
//
print(getSourceFileInfo ( ) + " started in " + bsh.cwd);
import org.apache.commons.io.FileUtils;

void afterPack() {
  print("(beanshell)  "+ getSourceFileInfo() + " after pack " + pack.name + " INSTALL_PATH " +  idata.getVariable("INSTALL_PATH") + " USER_HOME " +  idata.getVariable("USER_HOME") );
  appendLogbackToConfig(idata.getVariable("INSTALL_PATH")+"/elexis.ini", idata.getVariable("INSTALL_PATH")+"/configuration/logback.xml");
}

void appendLogbackToConfig(iniName, logbackXmlPath)
{
  logbackXml = new File(logbackXmlPath);
  if ( logbackXml.canRead() )
  {
    iniFile = new File(iniName);
    if (iniFile.canWrite())
    {
      fw = new FileWriter(iniName, true); // append
      out = new BufferedWriter(fw);
      out.write("\n-Dlogback.configurationFile="+logbackXmlPath+"\n");
      out.close();
      print("appendLogbackToConfig append "+ logbackXmlPath + " to " + iniName);
    } else {
      print("appendLogbackToConfig failed as "+iniName+ " cannot be written!!");
    System.exit(2);
    }
  } else {
      print("appendLogbackToConfig failed as "+logbackXmlPath+ " cannot be read!!");
      System.exit(2);
  }
}
// next lines for debugging
if (false && idata == void) // idata is not defined, we want to test
{
  addClassPath("/opt/ch.elexis/ngiger-utilities-comm/lib/commons-io-1.4.jar");
  appendLogbackToConfig("deploy/linux.gtk.x86_64/elexis.ini", "/home/niklaus/elexis/logback.xml");
}
